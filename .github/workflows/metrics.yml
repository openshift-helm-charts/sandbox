name: Scheduled Metrics
on:
  schedule:
  # * is a special character in YAML so you have to quote this string
  - cron:  '0 0 * * *'
  workflow_dispatch:
    inputs:
      # Production metrics require secret SEGMENT_WRITE_KEY
      # Test metrics require secret SEGMENT_TEST_WRITE_KEY
      production-data:
        description: "Upload metrics to production data {true,false}"
        required: true
        default: "false"

jobs:
  metrics:
    name: Collect and Send Metrics
    runs-on: ubuntu-24.04
    env:
      SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY }}
      SEGMENT_TEST_WRITE_KEY: ${{ secrets.SEGMENT_TEST_WRITE_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: ./.github/actions/setup-python

      - name: Install CI scripts
        uses: ./.github/actions/install-ci-scripts
        with:
          python-version: ${{ steps.setup-python.outputs.python-version }}

      - name: Release Metrics
        id: release_metrics
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          GITHUB_REPOSITORY:  ${{ github.repository }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          INPUT_PRODUCTION_DATA: ${{ inputs.production-data }}
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
              if [[ "${INPUT_PRODUCTION_DATA}" == "true" ]]; then
                  echo "Workflow dispatch using production write key"
                  WRITE_KEY=${SEGMENT_WRITE_KEY}
                  ID_PREFIX="helm-metric-downloads"
              else
                  echo "Workflow dispatch using test write key"
                  WRITE_KEY=${SEGMENT_TEST_WRITE_KEY}
                  ID_PREFIX="helm-test-metric-downloads"
              fi
          elif [[ "${GITHUB_REPOSITORY}" == "openshift-helm-charts/development" ]]; then
              echo "Scheduled dispatch using production write key"
              WRITE_KEY=${SEGMENT_WRITE_KEY}
              ID_PREFIX="helm-metric-downloads"
              if [ "${SEGMENT_WRITE_KEY}" != "" ]; then
                  WRITE_KEY=${SEGMENT_WRITE_KEY}
              else
                  echo "Error: Scheduled dispatch is missing write key"
                  exit 1
              fi
          else
              echo "Scheduled dispatch not on valid repo, do not set write key"
              WRITE_KEY=""
          fi

          if [ "${WRITE_KEY}" != "" ]; then
              ve1/bin/metrics --write-key=${WRITE_KEY} --metric-type=nightly --prefix="${ID_PREFIX}"
          else
              echo "Do not collect metrics, required segment write key is not set"
          fi

      - name: Send message to helm_dev slack channel
        id: notify_dev
        if: ${{ always() && github.event_name == 'schedule' && github.repository == 'openshift-helm-charts/development' && steps.release_metrics.conclusion != 'success' }}
        uses: archive/github-actions-slack@v2.8.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: C02979BDUPL
          slack-text: Failure! Nightly collection of metrics. See '${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}'

      - name: Result from "Send Message to helm_dev slack channel"
        if: ${{ always() && github.event_name == 'schedule' && github.repository == 'openshift-helm-charts/development' && steps.release_metrics.conclusion != 'success' }}
        env:
          SEND_MESSAGE_OUTCOME: ${{ steps.notify_dev.outputs.slack-result }}
        run: echo "The result was ${SEND_MESSAGE_OUTCOME}"
      
      - name: Send message to helm_notify slack channel
        id: notify
        if: ${{ always() && github.event_name == 'schedule' && github.repository == 'openshift-helm-charts/development' && steps.release_metrics.conclusion == 'success' }}
        uses: archive/github-actions-slack@v2.8.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: C04K1ARMH8A
          slack-text: Success! Nightly collection of metrics. See '${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}'

      - name: Result from "Send Message to helm_notify slack channel"
        if: ${{ always() && github.event_name == 'schedule' && github.repository == 'openshift-helm-charts/development' && steps.release_metrics.conclusion == 'success' }}
        env:
          SEND_MESSAGE_OUTCOME: ${{ steps.notify.outputs.slack-result }}
        run: echo "The result was ${SEND_MESSAGE_OUTCOME}"

